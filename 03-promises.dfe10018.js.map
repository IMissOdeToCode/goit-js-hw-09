{"mappings":"AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAE/BI,UACEC,QAAQC,MAAKR,KAAEA,KAAIG,MAAEA,MAAKC,KAAEA,KAAIC,OAAEA,QAAWI,M,GAUjD,SAASC,EAAcC,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUR,IAEpBW,EAAO,C,SAAEH,E,MAAUR,GAAQ,GAE5BA,EAAM,G,CAfbJ,EAAKI,MAAMgB,QACXpB,EAAKI,MAAMiB,MAAQ,IACnBrB,EAAKK,KAAKgB,MAAQ,IAClBrB,EAAKM,OAAOe,MAAQ,EAoCpBrB,EAAKC,KAAKqB,iBAAiB,UApB3B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAO1B,EAAKI,MAAMiB,OAC1BhB,EAAOqB,OAAO1B,EAAKK,KAAKgB,OACxBM,EAAID,OAAO1B,EAAKM,OAAOe,OAE3B,IAAK,IAAIO,EAAI,EAAGA,EAAID,EAAGC,GAAK,EAC1BjB,EAAciB,EAAGH,GACdI,MAAK,EAACjB,SAAEA,EAAQR,MAAEA,MACjBI,QAAQC,IAAI,uBAAqBG,QAAiBR,MAAU,IAE7D0B,OAAM,EAAClB,SAAEA,EAAQR,MAAEA,MAClBI,QAAQC,IAAI,sBAAoBG,QAAeR,MAAU,IAE7DqB,GAASpB,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n\n  getRefs() {\n    console.log(({ form, delay, step, amount } = this));\n  },\n};\n// refs.getRefs();\n\nrefs.delay.focus(); // focus on first input after reload\nrefs.delay.value = 1000;\nrefs.step.value = 500;\nrefs.amount.value = 5;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let a = Number(refs.amount.value);\n\n  for (let n = 0; n < a; n += 1) {\n    createPromise(n, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\n//\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","getRefs","console","log","this","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","focus","value","addEventListener","event","preventDefault","delay1","Number","a","n","then","catch"],"version":3,"file":"03-promises.dfe10018.js.map"}