{"mappings":"YAAA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAE/BI,QAAA,W,MACEC,QAAQC,KAAKC,EAAgCC,KAA9BV,KAAIS,EAAJT,KAAMG,MAAKM,EAALN,MAAOC,KAAIK,EAAJL,KAAMC,OAAMI,EAANJ,OAAMI,G,GAU5C,SAASE,EAAcC,EAAUT,GAC/B,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUT,UAEpBY,EAAO,CAAEH,WAAUT,S,GAEpBA,E,IAfPJ,EAAKI,MAAMiB,QACXrB,EAAKI,MAAMkB,MAAQ,IACnBtB,EAAKK,KAAKiB,MAAQ,IAClBtB,EAAKM,OAAOgB,MAAQ,EAoCpBtB,EAAKC,KAAKsB,iBAAiB,UApB3B,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAO3B,EAAKI,MAAMkB,OAC1BjB,EAAOsB,OAAO3B,EAAKK,KAAKiB,OACxBM,EAAID,OAAO3B,EAAKM,OAAOgB,OAElBO,EAAI,EAAGA,EAAID,EAAGC,GAAK,EAC1BjB,EAAciB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUT,EAAK2B,EAAL3B,MACjBI,QAAQC,IAAI,uBAAwCuB,OAAfnB,EAAS,QAAYmB,OAAN5B,EAAM,M,IAE3D6B,OAAM,SAAAF,G,IAAGlB,EAAQkB,EAARlB,SAAUT,EAAK2B,EAAL3B,MAClBI,QAAQC,IAAI,sBAAqCuB,OAAfnB,EAAS,QAAYmB,OAAN5B,EAAM,M,IAE3DsB,GAASrB,C","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n\n  getRefs() {\n    console.log(({ form, delay, step, amount } = this));\n  },\n};\n// refs.getRefs();\n\nrefs.delay.focus(); // focus on first input after reload\nrefs.delay.value = 1000;\nrefs.step.value = 500;\nrefs.amount.value = 5;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.delay.value);\n  let step = Number(refs.step.value);\n  let a = Number(refs.amount.value);\n\n  for (let n = 0; n < a; n += 1) {\n    createPromise(n, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\n//\nrefs.form.addEventListener('submit', onFormSubmit);\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","getRefs","console","log","ref","this","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","focus","value","addEventListener","event","preventDefault","delay1","Number","a","n","then","param","concat","catch"],"version":3,"file":"03-promises.e436ecb0.js.map"}